 
My name is Brice,  total of 8 years of industrial working experience in which 6 years as a Devops Engineer  with Landmark technologies  
which is an IT consulting firm where we develop, maintain, deploy and monitor applications for fintech
e-commerce and some Healthcare customers.  As a Devops Eng i had to perform several roles and this roles range for onboarding new project
where i create repository, create team's members, assign roles and responsability and also ensure that they are remain our git best practices.
I had also been in charge of setting up, maintaining and monitoring our CI/CD pipeline. And in the CI/CD pipeline Jenkins is our main automation tool.
So i intgrate Jenkins with github and automate the process using a trigger mechanism like webhook, pull scm, build periodically so whenever  developer 
commit a new version of the code jenkins will pull the code and since the code is like a raw material, maven which is our build tool will execute clean package
goals and we will obtain artifacts. I set up our code quality tool which is sonarqube and for each peoject we have benchmark that we follow, for example 
sonarqube make sure that is no bugs, no vulnerablities. if the code pass our quality gate, we need to back up the artifact in our artifactory in Nexus for disaster recovery.
Once that is done we complete our CI process, we then prepare for deployment. For Deployment we use Ansible which is our automation tool. so with the use of ansible playbook
we have been able to dockerise the Artifacts to create images from the Dockerfile and push them in our docker registry and once that is done Ansible is also 
responsible to send and API call to our k8s cluster and in the cluster the API server recieve the call, persist it in ETCD, the scheduler is trigger and check for available node 
to carry out the job, also the controller manager will be alert then the kubelet in worker node will receive instruction from the master node and will pull down this build image in 
our docker registry. once that is done the container runtime will run the container and application will go live. And in the same time we have deploy monitoring tool 
prometheus and grafana, where prometheus is going to scrape the data using node exporter configure in each nodes  and grafana will use those data and we will able to have 
a nice dashboard on which we can monitor the health of our cluster.
 

 I'm a devops Eng with more than 6years experience working on fintech project, paiement gateway  and industrial scale project. I also worked 
 on some project that onbarding hospitalities solutions and in all of this i also ensure compliances to federal and global information 
 security standard within my environment. i worked in an agile environment where we have every morning a daily startup meeting during which
 we discuss what we did the day before and the pb we encountered and  what we are going to do on that day and what we are ahead.

 End result of our project: 
     - we are managing application that will help customer to access their account online and be able to do payment (it was a payment gateway), transfer,
     - for our banking customer, the result of the project allows customer create an account and for the mortgage departement the could be able to have 
        information update seamlessly.

    - An application for Healthcare customer helps the company to have all information about the customer, hospitalisation status, medications ...
    - for insurance company, customer can book insurance online and renew their policy
     
 I Lead the CI/CD team.It is a small team, we are resposible of the CI/CD tools.
   i maintain jenkinsfile, update them when necessary :
   i also help the infrastructure team to provision infrastructure. we provision the entire environment, we use terraform to autaumate that
   i akso accomplish project in configuration management writting playbook to maintain different projects.
   I maintain servers to increase thier uptime
 We deal with github installation, Jenkins integration with Maven which is our build tool since we
 manage java based application ,Sonarqube as code quality and nexus as artifactory.
 we are responsible of bulding, maintaining the service resposible that run the  automation. 


Design, review, document, and implement infrastructure around web, application, 
and data tiers to meet security, availability, responsiveness, and cost objectives.
     At Landmark i build a three tiers infrastructure for Security reason:
Automate application and cloud infrastructure management using scripting and industry standard tooling, 
achieving a high degree of configurability.

- Design and build automation solutions
- build and manage fast scalable workflows
- Manage, monitor, and enforce security
- Specify security requierements

Building and maintaining tools, solutions and microservices associated with deployment and our operations
platform, ensuring that all meet our customer service standards and reduce errors.

Intensive involvement in Infrastructure as Code (IAC), execution plans, resource graph and change automation.

Implement and maintain intelligent infrastructure and application monitoring for other engineering teams to plug into.

Troubleshoot infrastructure and application configuration issues identified by monitoring and manual testing and
add monitoring to cover identified gaps.

Proficiency in Server Provisioning, Middleware Management, Build and Deployment Automation through tools like GITHub,
Jenkins, Docker and other technologies.

Stress test infrastructure, implementing process and design changes as needed.

Create and maintain runbooks for operational issues. Implement and refine operational processes and procedures,
automating these when possible.

  Runbooks solve the problem of inconsistent incident response for every team. Design the process you want teams  :
  to take when a new incident is declared :
  - i automate the workflow to be able to process as faster as possible the incident and constantly :
    execute the every time the incident occur.
  - 

Support company security compliance efforts.
  some best practices for security compliance:
    - we Build a cybersecurity compliance plan : your IT, security, and compliance teams on the same page.
    - we Make sure your teams are talking to each other: educate teams members, and train your IT and security team 
        to be be up on the finer points of compliance and regulatory standards.
    - we Use smart and automated tools: it helps to make business processes more efficient and more consistent as 
        organisation scale. It can be difficult to maintain and keep track of our infrastructure.
    - We Patch and update often:  A patching schedule is critical. To keep your systems up to date, and 
        boost security,performance, and compliance.
    - We need to Monitor continuously: Threats are constantly evolving, it is important to be aware of your 
        infrastructure and the specific risks that affect your data and networks.
      
Establish and manage DevOps team best practices.

Manage code deployments, fixes, updates and related processes.
Provide leadership and mentorship for DevOps engineers.
Stay current with industry trends and source new ways for our business to improve.
Manage and participate in an on-call rotation with other engineer



Je m'appelle Brice, je suis ingénieur DevOps senior travaillant avec les technologies Landmark depuis plus
de 6 ans, Landmak Technology est une société de conseil informatique où nous développons, maintenons, déployons et surveillons des applications pour la fintech
e-commerce et certains clients de la santé. En tant qu'ingénieur Devops, j'ai dû jouer plusieurs rôles et cette gamme de rôles pour l'intégration d'un nouveau projet
où je crée un référentiel, crée les membres de l'équipe, attribue des rôles et des responsabilités et veille également à ce qu'ils restent nos meilleures pratiques git.
J'avais également été en charge de la mise en place, de la maintenance et du suivi de notre pipeline CI/CD. Et dans le pipeline CI/CD, Jenkins est notre principal outil d'automatisation.
J'intègre donc Jenkins avec github et automatise le processus à l'aide d'un mécanisme de déclenchement tel que webhook, pull scm, construit périodiquement à chaque fois que le développeur
valider une nouvelle version du code jenkins extraira le code et puisque le code est comme une matière première, maven qui est notre outil de construction exécutera un package propre
objectifs et nous obtiendrons des artefacts. J'ai mis en place notre outil de qualité de code qui est sonarqube et pour chaque projet nous avons des benchmark que nous suivons par exemple
sonarqube s'assure qu'il n'y a pas de bugs, pas de vulnérabilités. si le code passe notre porte de qualité, nous devons sauvegarder l'artefact dans notre artefact dans Nexus pour la reprise après sinistre.
Une fois cela fait, nous terminons notre processus CI, puis nous préparons le déploiement. Pour le déploiement, nous utilisons Ansible qui est notre outil d'automatisation. donc avec l'utilisation d'ansible playbook
nous avons pu dockeriser les artefacts pour créer des images à partir du Dockerfile et les pousser dans notre registre docker et une fois cela fait, Ansible est également
responsable d'envoyer et d'appeler l'API à notre cluster k8s et dans le cluster, le serveur API reçoit l'appel, le persiste dans ETCD, le planificateur est déclenché et vérifie le nœud disponible
pour effectuer le travail, le gestionnaire de contrôleur sera également alerté, puis le kubelet dans le nœud de travail recevra des instructions du nœud maître et réduira cette image de construction dans
notre registre docker. une fois cela fait, le runtime du conteneur exécutera le conteneur et l'application sera mise en ligne. Et en même temps, nous avons déployé un outil de surveillance
prometheus et grafana, où prometheus va récupérer les données à l'aide de la configuration de l'exportateur de nœuds dans chaque nœud et grafana utilisera ces données et nous pourrons avoir
un joli tableau de bord sur lequel nous pouvons surveiller la santé de notre cluster.