=====================================================
Linux OS;   Linux Computers(Servers);  Linux Commands:

   Operating System (OS) = LINUX OR Windows, Solaris       
=====================================================
Laptop or other Personal Computer:

hardware and software make a computer. without software a computers is just a bare metal

Computer Vendors:  hp laptop $900 [hw=600, sw-OS =300]
  hp --- Your HP laptop is running with a windows OS   
  dell 
  lenovo -Your laptop is running with a Linux OS 
  acer 
  microsoft 
  toshiba
  apple --- Your laptop is running with a MacOS  
  
Servers:
  Operating System is the heart of the Computer/servers 

  Windows -- OS 
     Licence 
  Linux -- OS 
     Open source 
  macOS 

Solaris ---> paid 
Linux -- 
Solaris kernel and Developed the Linux kernel 
1991 Linus 
  Solaris 
     kernel 
       Developed LINUX OS from Solaris kernel  


Open source vs FREE OS 
Open source: -- both the source codes
               and the softwares is free 
Free: --- ONLY the the softwares is free  
Licence technology: softwares is not free

KFC     / Coca cola:   GoodChicken (GC) 
recipe    recipe        Open source 

  ssh-client = ssh = secure shell = 22

  
LINUX         vs      Windows:
Open source           Licence
virus=no              Virus=Yes
case sensitive        not case sensitive 
LS =! Ls, lS ls       LS, Ls, lS ls 
use for backend       workstations 
backend 80%Linux      20% backend
MULTI-DESTRIBUTIONS    Single distribution
 Redhat 
 CentOS 
 ubuntu 

LandmarkTech:
  servers: 90% are Linux (running a linus os/dist)
           10% are Windows   
  work stations: 
    Windows --> 50 Windows 
    MacOS   ---> 40 Mac Laptop
    others  ---> 10 

Virtual servers hosted in AWS  ---> Cloud Computing 
INSTALL AND RUN A DATA CENTER
  aws - amazon web services  : 
         AWS is hosting our  LINUX servers  =  

    aws.amazon.com 
email: landmarkunive@gmail.com
passwd: 

RedHat Server in AWS = EC2 :

Windows Loptop: 
 ssh-client ----softwares use to connect to any Linux servers
  mobaXterm --1
  git bash  --2
  putty
  PowerShell & Command prompt 

MacOS Laptop:
   Terminal 
   GIT-Bash

How servers or PC are managed?
How are tasks performed in servers? 
    GUI = Graphical user interface 
    CLI = Command LINE  interface

Git bash installation:
   https://git-scm.com 

Operating
  Linux   - Linus
  Windows - Bill Gates

How to access a Linus server running in AWS:
  username: ec2-user / simon / LandmarkTech
  
  authentication:
    password authentication: admin@124
    multi-factor authentication (password + code):

    ssh key 

  ssh-client -- putty / Git bash / mobaXterm 

  Server's address: ip-address, dns 

      ssh jane@demoServer or  ssh jane@10.1.10.2
      ssh jane@appServer  0r  ssh jane@10.10.10.8
      ssh jane@dbServer   0r  ssh -i key27.pem jane@10.10.10.8

      ssh userName@ip-address

  Firewall is open on required ports: 

   SSH = Secure SHELL 

   ssh userName@ip-address

cd Downloads 
ssh -i "class27key.pem" ec2-user@ec2-3-133-151-47.us-east-2.compute.amazonaws.com

 ssh 

 Running tasks or workloads in a server:

 1. GUI     = Graphical User Interface 
              Typing  
 2. CLI     = Command Line Interface 
         mkdir git sonaQube jenkins aws azure  
 3. Scripts = List of instructions/commands that automate workloads 

Windows File/Directory Structure
   c:// = The root Directory [folder] 
   Files and Folders & sub folders
     mkdir git sonaQube jenkins aws azure gcp
Linux File/Directory Structure
  Files and Directory & sub Directories 
  Files = Files for Linux/windows
  Folders = Windows and Directory for Linux


Linux comands:
  root (principal) directory (folders) = / 

           Linux File Structure   :                   
                    /  
/home = it contains user's home directory details

/etc = contains configuration files 
  =====
  /etc/ssh/sshd_config = sshd_config file is used to configure ssh  
  /etc/shadow  = detail information about users password 
  /etc/passwd  = detail information about users 
     cat /etc/passwd

/bin = contains binary files [commands]
=====
  ls = list contains of a file
  pwd = print working Directory 
  whoami = Print the user name associated with the current effective user ID.  Same as id -un.
  cd  = change Directory
  cat = displays the content of a file 
  clear = clear your consoline line


/sbin - contains system binary files [commands]
=====
  - contains system binary files [commands]
    Executed ONLY by priviledge /admin/root users 
  - adduser lab
  - passwd lab

                       IQ: What is the difference between bin and sbin in Linux? 

 sbin are binary flies only executable by users 
   with admin and elevated priviledges  
    exple: adduser admin

 bin files are executable by any user 
  exple: ls = list the content of a Directory

                        IQ: Explain how users are categorised in Linux?

    We have three category of users in Linux:

    1. admin/root user  = super user that runs all commands 
    2. normal users  = runs executables in /bin. we can have normal users with elevated privileges

    3. system users 
        Users created when we install certain softwares 

/tmp:
====
contains temporal files 

/opt: it contains softwares. It is were packages are installed.
===
  Installation of third party softwares like Jenkins

/lib  = librairies folders are found there
====

proc 
=======
-  meminfo 
-  cpuinfo 

var = dynamic files [logs]/ contains variables files
========================== 
 - /var/log/messages 
    sudo cat /var/log/messages : whatever happenning in the server is saved in this file

Linux Basic Commands:
=====================
How do you run Linux commands Landmark?
1. Create a Linux server in AWS Cloud
2. Connect via ssh into the server 
   make sure the ssh port 22 is open in the server's firewall
3. Start running task/workloads using commands.
Creating, Navigation and Directory Control Commands: 

      mkdir = create directory  
      cd    = directory navigation   
      ls    = list file and directories
      pwd   = where are you located in the server 
              print/present working Directory 

     ls     = list the content of pwd 
     ls /   = list the content of the root Directory  
     ls /tmp = list the content of the tmp directory 
     ls /var/log = list the content of the /var/log directory

      mkdir class28
      mkdir devops
      mkdir -v test 
           -v verbose

  sudo hostname demo 
  sudo su - ec2-user 

mkdir class/class1/class2/class3 
mkdir Devops/SDLC/Linux/Jenkins/Git/Maven/Nexus/
mkdir -pv Devops/SDLC/Linux/Jenkins/Git/Maven/Nexus/
  - p = will create both parent and child Directory


  mkdir  Devops/
  mkdir  Devops/SDLC/
  mkdir  Devops/SDLC/Linux/
  mkdir  Devops/SDLC/Linux/Jenkins/
  mkdir  Devops/SDLC/Linux/Jenkins/Git/
  mkdir  Devops/SDLC/Linux/Jenkins/Git/Maven/
  mkdir  Devops/SDLC/Linux/Jenkins/Git/Maven/Nexus/

 = tree cannot be found 

 = yum install tree 
   This command has to be run with superuser privileges
   (under the root user on most systems)
sudo = permit a user to run commands as another user or superuser 

 sudo yum install tree

 =========================
Deleting an empty directory:
   rmdir dirName 
     rmdir paypal/

   rm -r dirName
     rm -r paypal/

[ec2-user@demo ~]$ rmdir class
rmdir: failed to remove 'class': Directory not empty

Deleting a directory with content:
   rm -r dirName 
   rm -rf dirName 
   
Deleting all directories that start with a
   'class' or a 'given pattern'
   rm -rf class*  

  * = wild card 

Deleting all directories that ends with a
   'app' or a 'given pattern'
   rm -rf *app   

cd  = directory navigation

[ec2-user@demo ~]$ pwd
pwd = /home/ec2-user
pwd =  /home/ec2-user/Devops/SDLC/Linux

cd .. 
cd ../../
cd - = moves you to the  directory you were before

cd / 
cd /bin 
cd /etc 

File management:
  touch is used to create an empty file
     touch fileName 
     touch list.txt 
  echo command is used to print some information 
     echo  DevOps is good
     echo 'JESUS IS LORD'
     echo JESUS IS LORD
     echo "JESUS IS LORD" > truth.sh 
     echo  DevOps is good > hired

ls = 
ll or ls -l = long list the content of
              a directory

ls -lt = long list base on time  
ls -ltr 
Why/how are some files hidden
Important files are hidden 
 to avoid accidental delete
  rm -rf class* 
  mkdir .config 
  touch .deploy 

IQ: How can you display hidden files/dirs?
   ls -a 

Path to files/directories:
  relative path and 
    start pwd 
    cat test
    ls Devops/ 
  absolute path
      start from root dir (/) 
    cat /home/ec2-user/test
    ls /home/ec2-user/Devops/

Reading the content of a file:
  cat fileName 
  cat -n fileName 
  cat test 
  cat  /etc/passwd 
      [users details] 
  cat   /etc/shadow
  sudo cat /etc/shadow
        [users password] 
 monitor.sh file has 1000 lines 
   head fileName 
      [display the 1st 10 lines]
   tail fileName 
      [display the last 10 lines]
  tail -1 fileName
     [displays the last line]
  tail -4 fileName
    [displays the last 4 lines]

list :
 simon 
 Legah 
 Paul 
 John 
 Peter 
 James 
 Tita 
 Pefok 
 Linux 
 Windows 
 Git 
 Maven 
 aws 
 gcp 
 mgc 
 toyota 

Modifying the content of a file:
  Text editors:
 Windows:
    sublime text
    bracket
    notepad++
    vs code 
    atom 
    eclipse 

 Linux:
  vi/vim editors
  nano 
  vi fileName 
[ec2-user@demo ~]$ vim tools
-bash: vim: command not found
  sudo yum install vim  tree 
  1. you start accessing the file in command mode 
     press the 'i' key to enter insert mode 
     press "esc key" to enter command mode 

 Save and Quit: 
     type : wq and press enter key to save and quit
     do a quick double press on the shift+z key  
       to save and quit 
            press+hold 'shift key' and type ZZ
 Quit without saving:  
     enter command mode          
     type : q! and press enter key to quit 
           without saving

Project:
 create a file in using vi and explain your expection
 in your the DevOps class28 Program.

  Graduation date = July 9, 2022.

less : it is used to read large file
less fileName
       tools
more : it is also used to read file 

cat / tail / head /  less / more

linux is case sensitive, so Cat / TAIL / Head  will not work but in windows it will work.

exple:
 cat Dev.txt 
 cat DEV.txt will not work on linux but will work on windows.
 cat dev.txt 

Screen1 = Laptop
screen2 = (external monitor)

5-9 minutes video 

cp = copy files [backup]
mv = rename files/directories

files:
  mv fileName 
  cp fileName

directories:
  mv dirName 
  cp -r dirName ==> we need to add -r to be able to copy a directory

file  
wc  = word counts 
  wc -l = number of lines 
  wc -c = number of charesters in a file  
ln:  link can be hard link or soft link.
    hard link: is the copy of the original file. if we delete the original file the hard 
                link will remain
    soft link: redirect to the original link. if we delete the original file, the soft link
               will not be able to output the original file content
  fileName =  list 
  ln list list-hard 
       = hard link  [ln/cp]
       = copy 
  ln -s list list-soft 
       = soft link 

Deleting a file in Linux:
 rm fileName 
 rm list 
==============================

Folders = Windows : Is a container of files and sub-folders/directories 
Directories= Linux :  Is a container of files and sub-folders 
Files 
Diminion Systems =  cnn 
   mkdir cnn 
   When creating a directory we need to secure it because it contains informations about the project. 

File permissions/security:
-rw-rw-r--. 1 ec2-user ec2-user 45 Apr 23 08:33 list:  FILE
lrwxrwxrwx. 1 ec2-user ec2-user  4 Apr 23 08:35 mylist : Link
drwxrwxr-x. 2 ec2-user ec2-user  6 Apr 23 08:31 news: Directory
-rw-rw-r--. 2 ec2-user ec2-user 45 Apr 23 08:33 list.hard: 
1   2       3   4         5     6     7           8
  Files start with - 
  directories start with a 'd'
  symbolic/soft links start with 'l'

Fields for files:
  1)  type (-file,)
  2)  Permissions 
  3)  Number of links
  4)  Owner
  5)  Group Owner
  6)  Size of the File in Bytes
  7)  Date and Time of creation
  8)  File name/Dir Name 
d rwxrwxr-x. 2 ec2-user ec2-user  6 Apr 23 08:31 news: Directory
- rw-rw-r--. 2 ec2-user ec2-user 45 Apr 23 08:33 list: 
- rw-rw-r--. 2 simon developers  45 Apr 23 08:33 news:     
Permission attributes:
  Read    - r      = 4   grant read access for a user  
  Write   - w      = 2   grant write/modify  access for a user
  Execute - x      = 1   grant access to run the file as a command 
           Normal Users:
  Owner     Group             others: 
  simon     developers        anyone 
  rw-=6     rw-=6              r--=4    = file = 664 
  rwx=7     rwx=7              r-x=5    = Dir  = 775

            root User:
            su - userName [SU = SWITCH USER]
            su - root
        Password:
        [ec2-user@demo cnn]$ sudo su - root
   sudo: permit priviledge users to run commands as other users
d rwx r-x r-x. 2 root root    6 Apr 23 09:02 cbs
- rw- r-- r--. 1 root root    0 Apr 23 09:01 deploy.java
  Owner     Group             others: 
  root       root              anyone 
  rw-=6      r--=4              r--=4    = file =  644
  rwx=7      r-x=5              r-x=5    = dir  =  755
                   root user        Normal Users:
                   File  Dir        File     Dir 
Full Permissions:  0666 0777        0666     0777
Default perm:      0644 0755        0664     0775 
                  ---- ----        ----     ----
umask value :      0022 0022        0002     0002:
                  ---- ----        ----     ----                  
umask value: set the Default files permissions for users.

what is the Default file permissions for root and normal users?

Umask setup: is in /etc/bashrc or /etc/profile file as follows

For our cnn project all files should carry 644 permissions 
  Determine the umask value that should be set?
                          File      Dir:
  Full Permissions        0666     0777      
  Expected permissions    0644
                          -----
  umask value             0022
  ---

For our ebay project all files should carry 444 permissions 
  Determine the umask value that should be set?
                          File      Dir:
  Full Permissions        0666     0777      
  Expected permissions    0444
                          -----
  umask value             0222
  ---

For our news broadcast project all files should carry 600 permissions 
  Determine the umask value that should be set?
                          File      Dir:
  Full Permissions        0666     0777      
  Expected permissions    0600
                          -----
  umask value             0066
  ---
For our news project all files should carry 400 permissions 
  Determine the umask value that should be set?
                          File      Dir:
  Full Permissions        0666     0777      
  Expected permissions    0400
                          -----
  umask value             0266
  ---

For our cbs project all files should carry 0777 permissions.
  Determine the umask value that should be set? 
Directories navigation = executable permissions is required   

File permissions/security:
  How are files permissions modified in Linux?:
     1. By changing umask value (this will affect all files created) 
     2. by running the chmod command (This will change permission for a specific files)
  chmod: we can add or remove permissions rights & priviledges
    chmod permissions fileName 
    chmod 600 app.py 
        Owner  = 6 = rw- 
        group  = 0 = ---
        others = 0 = ---
        rwx rwx r-x.
        Owner  = 7 = rwx       7- rwx
        group  = 7 = rwx       0- ---
        others = 5 = r-x       0- --- 
  
  chown: changing the ownership of files/directories
         Only the root user can change ownership of files 
       /bin or /sbin == it is in sbin because only root user can change ownership

  - rw- --- ---. 1 ec2-user ec2-user 0 Apr 23 09:32 app.py
  d rwx --- ---. 2 ec2-user ec2-user 6 Apr 23 09:32 test
    useradd or 
    adduser simon 
    sudo chown simon app.py
    sudo -u simon chown simon app.py (-u means that we want to run as simon but the permission was denied only root can do)
    chown: changing ownership of 'app.py': Operation not permitted
    sudo -u root chown simon app.py

    chgrp: is use to change group ownership
    sudo chgrp simon app.py 
    sudo chown simon:simon test ==> this will change ownership of both owner and group

  grep: Extract specific patterns from files  

         /etc/passwd file  with over 1000 user's details 
      Extract simon's details from the /etc/passwd file 
      grep simon /etc/passwd 

      cat /etc/passwd = output  
      grep simon 

  pipe: |  it allows the output of one command to become the input of another command

     cat /etc/passwd | grep simon 


  IQ: explain the grep and the pipe commands 

  grep
  sort : to sort file alphabetically
  sort -i : will ignore casing in linux. NB==> linux is case sensitive by Default
  
    find: to search for a file
    find -a
    find . -empty 

sort : It is used to sort the output in numeric or alphabetic order .

tr: To translate the text from lower case to upper case.

Sed : is a Stream editor. A stream editor is used to perform basic text 
transformations on an input stream (a file or input from a pipeline).
 
  date 
  timedatectl list-timezones
  sudo timedatectl set-timezone "America/New_York"  

find 
    find /home/ec2-user -name list.txt
    find ~ -name list.txt :  search file in the user's homeDir wherever you are located 
    find . -name hired  :    search file in a pwd 
    find /tmp -name list.txt :
    sudo find / -name test : search file in the entire server or globally (root )
    find . -empty :  search for empty file 
    find .-type f -empty
    find . -type f -perm 0777: It will search all the files which have 777 permissions.

        . = pwd 
        ~ = user's homeDirectory
    find . -mtime 1 : It will find all the files modified exact 1 day in current directory.
  
  sed
  cut 
  awk 
  date 
  timedatectl list-timezones
  sudo timedatectl set-timezone "America/New_York"  

user management commands:
 3 category of users in Linux:

   1. root user:
         superUser or admin  
         can run all commands in the server  

  2. Normal users :
     Users created by the admin/root
     can only run binary [/bin] files by Default   

  3. system users :
         Created with softwares installations   

 Groups / Users: 10 teams with 200 Team members 
 app-Server 
 db-Server 
 web-Server
    Directors
      legah
    Managers/
      emma 
      gloria
    Engineers 
      landmark 
      acho 
      alu 
    Developers  
       babs   

 adduser : --- create a user in Linux 
 useradd : --- create a user in Linux
 groupadd : -- create a group in Linux 
 groupdel : -- delete a group in Linux
    groupadd managers
    sudo groupadd managers
    sudo -u root groupadd managers
      cat /etc/group : group are find in this directory

         tail -5 /etc/group  ==> will output the last 5 groups created

[ec2-user@demo ~]$ sudo groupadd managers
[ec2-user@demo ~]$ sudo groupadd class28
[ec2-user@demo ~]$ sudo groupadd developers

 sudo useradd userName : use to create users

 sudo -u root useradd paul : This create the user and her homeDir 
    paul     = homeDir = /home/paul  = ~ 
    landmark = homeDir = /home/landmark 
    ec2-user = homeDir = /home/ec2-user

   ls -ltr /home  

Assigning password to users:

  passwd userName 
  sudo -u root passwd landmark
  sudo passwd landmark 
     class28   

 /etc/passwd : file use to check users password

 /etc/sudoers :  File use to assign sudo, escalated or admin rights/priviledges to users 
 
 to achieve that we need to ==> sudo vi /etc/sudoers  
#includedir /etc/sudoers.d
ec2-user        ALL=(ALL)       NOPASSWD: ALL
landmark        ALL=(ALL)       NOPASSWD: ALL
simon           ALL=(ALL)       NOPASSWD: ALL

 Files to consider:
   /etc/passwd  :      users details 
       cat /etc/passwd

   /etc/groups :       group details 
       cat /etc/groups

   /etc/shadow :       user's password 
       cat /etc/shadow


Project:
Create the following groups 
    managers, 
    developers
Create the following users and assign passwords:
    dominion 
    success 

Assign dominion to the managers group and assign
success to the developers 

How to users to groups in Linux?
  useradd 
  userdel 
  groupadd
  groupdel  
  usermod  = 
    This modify a user's account in Linux e.g 
    Add a user to a secondary group :  usermod -G groupName userName
  sudo usermod -G managers landmark 
  Coomand to list/display user's group.
           

[landmark@demo ~]$ id landmark
   uid=1002(landmark) 
   gid=1005(landmark) groups=1005(landmark)

[landmark@demo ~]$ sudo usermod -G managers landmark
[landmark@demo ~]$
[landmark@demo ~]$ id landmark
 uid=1002(landmark) gid=1005(landmark)
 groups=1005(landmark),1002(managers)

  chage : used to change age's details of users
  lid : used to display user's and group's details. only root can run it

[landmark@demo ~]$ sudo chage admin:
Changing the aging information for landmark
Enter the new value, or press ENTER for the default
        Minimum Password Age [0]:
        Maximum Password Age [99999]: 7
        Last Password Change (YYYY-MM-DD) [2022-04-24]:
        Password Expiration Warning [7]: 3
        Password Inactive [-1]: 90
        Account Expiration Date (YYYY-MM-DD) [-1]: 180

EC2 SERVER: 
    root user  elevated priviledges  
    ec2-user elevated priviledges 
      How can a user [ec2-user] access the server?
       userName: ec2-user 
       ssh-private-key = class28key.pem [001244fafsd] 
       password: class28 
       server's address: public-ip [52.87.248.166]
 using Password:
    ssh ec2-user@52.87.248.166
 using ssh-private-key:
    ssh -i class28key.pem ec2-user@52.87.248.166
Passwordless authentication --- :
landmark 
simon  
paul 

How users can access ec2 servers  with password ?:
1. assign password to the user 
2. Configure password authentication 
   - sudo vi /etc/ssh/sshd_config
       allow password authentication 
         PasswordAuthentication: yes [change from no to yes]
  - restart the ssh service 
       sudo systemctl restart sshd     

3.  ssh userName@hostAddress
    ssh simon@52.87.248.166
       password = class28 

Files: 
  /etc/ssh/sshd_config   
    sudo vi /etc/ssh/sshd_config
  /etc/sudoers 
    sudo vi  /etc/sudoers



Granting sudo access to users:
  sudo vi  /etc/sudoers or 
  echo "userName ALL=(ALL) NOPASSWD:ALL" |  tee /etc/sudoers.d/userName
 add ansible user in the sudoers file:
  sudo echo "ansible  ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/ansible
 add simon's user in the sudoers file:
  sudo echo "simon  ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/simon 
Allow users to login using password:
  sudo sed -i "/^[^#]*PasswordAuthentication[[:space:]]no/c\PasswordAuthentication yes" /etc/ssh/sshd_config
  sudo service sshd restart  
  sudo systemctl restart sshd 


 ssh simon@54.85.146.233  

System Resources Commands:
who 
w 
whoami 
users 
whereis 
date 
df 
du 
hostname

System Resources Commands:
who : Displays the current users working on the system.
w : Show who is logged on and what they are doing
users : Displays a compact list of the users currently logged
        on the  system.
whoami : Display the current user info who gave this command

whereis: locate binary file location in the server
         whereis ls 
         whereis whereis
         whereis pwd 
         whereis touch 
date : : Print or set the system date and time
  date 
  date -s "24 JAN 2022 20:04:40"
  date -s "28 APR 2022 20:00:00"

How to define/set set-timezones: 
  timedatectl list-timezones
  sudo timedatectl set-timezone <your_time_zone>
  sudo timedatectl set-timezone Africa/Accra
  sudo timedatectl set-timezone America/New_York

application server:
  the system is very Important for automation 
    scheduling an application deployment for 11:55PM EST/EDT 

df - Report file system disk space usage
     RAM = 8GB, Hard drive space = 500GB SSD 
server/system/computer/laptop = 
   create files, directories folders 
   downloads movies, videos, study materials 

df - 
$ df -h
Filesystem            Size  Used Avail Use% Mounted on
C:/Program Files/Git  953G  922G   31G  97% /

df : Report file system disk space usage
  df 
  df -h  ; 
     where -h = human readable 
du : Estimate file space usage.
      tesla 
      dev  
      qa 
      prod 
      videos --- movie1 
                 movie2
                 movie3

du -h 

RAM = 8GB,
  RANDOM ACCESS MEMORY 
  IT DETERMINES THE SPEED OF YOUR System/SERVER 
    memory 

free -h 
feer -m  = megabytes 

[ec2-user@demo ~]$ free -h
      total   used        free      shared  buff/cache   available
Mem:  965M     123M        233M     648K        608M        701M
Swap: 0B       0B          0B

Swap: 200% of memory and it is extracted from the hard disk 

df -h:
   /dev/xvda1      9.0G  1.7G  7.4G  18% /

Mem:            10G         9.8G         0.2G
  applications will either not run or lacks performance 
Mem:            10G         9.8G         0.2G
swap:           20G          0 
  swap memory equals 200% of memory 

  RAM = Random access memory 
  running applications --> memory optimised 

lscpu 
lsmem 

How can a System/server be identified?
 webServer 
 remoteHost details:
    public or private ip address: 54.85.146.233
       ssh simon@54.85.146.233
    hostName: webserver 
       ssh simon@webserver
    dnsName: www.rbc.com
       ssh simon@ww.rbc.com      
hostname : Show or set the system host name.
   hostname  = displays the system's hostname 
   hostname dbServer  = this will assign the system hostname 
                        as dbServer 
   hostname dbServer = only the root user or users with 
                       admin/sudo access can assign hostname 
   sudo hostname dbServer
        hostname webserver 

   ping demo

   ping google.com      = dnsName 
   ping 172.253.122.113 = public ip address
hostname:
  hostname dbServer
  hostname  
ifconfig  = display the IP addresses of a server/system 
    172.31.19.167
    172.31.19.167
ip a

[ec2-user@dbserver ~]$ hostname -i
    fe80::832:a4ff:fe8a:91d1%eth0  = ipv6
                                   128 bites 
    172.31.19.167 = ipv4  
     8 + 8  8  8  = 32 bites 

  boa = 500,000 servers [1,000,000 ip address] 

hostname -i 

lsblk 
cat 
Command helpers:
  man : Display the on-line manual pages.
    man ls 
       ls - list directory contents
    man pwd 
      pwd - print name of current/working directory
  info:
    info ls 
  help:
    ls --help 
  whatis:
   whatis ls  
    The whatis command displays a summary line
    from the  man page for the specified 
    command in Linux.
    whatis ls 

service sshd status  [Redhat 5/6]  
service serviceName status  [Redhat 5/6] 

systemctl status sshd [redhat 7/8]
service sshd status [redhat 7/8]

systemctl status|stop|start|restart|enable|disable sshd 
systemctl status|stop|start|restart|enable|disable httpd

systemctl list-unit-files

uptime: Tells how long the system has been running.
    uptime 
        5 years 
        366 days 
        15 days 
  To optimised uptime ---
last: show listing of last logged in users.
Yum: 









